name: Release
permissions:
  contents: read # to fetch code (actions/checkout)
jobs:
  release:
    if: github.repository_owner == 'osamamagdy'
    runs-on: ubuntu-latest
    # Only this job needs id-token: write for cosign to push signatures using keyless signing
    permissions:
      id-token: write
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        # Only fetch last 10 commits, before we were fetching everything including v2 commits!
        fetch-depth: "0"
        token: ${{ secrets.GIT_BOT_TOKEN }}
    - uses: fusion-engineering/setup-git-credentials@v2
      with:
        credentials: ${{ format('https://x-access-token:{0}@github.com/', secrets.GIT_BOT_TOKEN) }}
    - name: Run coverage
      run: make test-coverage
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./build/reports/cover.txt
    - id: prep
      name: next release version
      uses: jenkins-x-plugins/jx-release-version@v2.6.1
    - env:
        GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
        REPO_NAME: ${{ github.event.repository.name }}
        VERSION: ${{ steps.prep.outputs.version }}
      name: changelog
      uses: docker://ghcr.io/jenkins-x/jx-changelog:0.0.47
      with:
        entrypoint: .github/workflows/jenkins-x/changelog.sh
    - env:
        VERSION: ${{ steps.prep.outputs.version }}
        GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
        REPOSITORY: ${{ github.repository }}
        COSIGN_EXPERIMENTAL: "true"
      name: upload-binaries
      uses: docker://ghcr.io/jenkins-x/jx-goreleaser-image:0.1.0@sha256:4ac5aeb4ce850761aeffc585446ea47bbcfa680d096fdd8c5d00c5a8c5adbcc0
      with:
        entrypoint: .github/workflows/jenkins-x/upload-binaries.sh
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: osamamagdy
        password: ${{ secrets.GHCR_TOKEN }}
    - name: syft-installer
      uses: anchore/sbom-action/download-syft@v0.13.0
    - name: cosign-installer
      uses: sigstore/cosign-installer@v2.8.1
    - name: Build and push jx-boot
      uses: docker/build-push-action@v3
      id: push-jx-boot
      with:
        context: .
        file: ./Dockerfile-boot
        platforms: linux/amd64,linux/arm64
        push: true
        build-args: |
          VERSION=${{ steps.prep.outputs.version }}
        tags: |
          ghcr.io/osamamagdy/jx-boot:latest
          ghcr.io/osamamagdy/jx-boot:${{ steps.prep.outputs.version }}
    - name: Sign the published Docker image for jx boot
      # ToDo(ankitm123): Remove this when this step works, for now we want this to unblock other releases
      continue-on-error: true
      env:
        COSIGN_EXPERIMENTAL: "true"
        GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
        # ToDo: We should change this to some other user, a test account pushing images and artifacts for jx org sounds wrong!
        GIT_USERNAME: osamamagdy
        DOCKER_REGISTRY_ORG: osamamagdy
      run: |
        cosign sign ghcr.io/"${DOCKER_REGISTRY_ORG}"/jx-boot@"${{ steps.push-jx-boot.outputs.digest }}"
    - name: Generate and Push signed SBOM for jx-boot
      # ToDo(ankitm123): Remove this when this step works, for now we want this to unblock other releases
      continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
        GIT_USERNAME: osamamagdy
        DOCKER_REGISTRY_ORG: osamamagdy
        VERSION: ${{ steps.prep.outputs.version }}
        COSIGN_EXPERIMENTAL: "true"
      run: |
        syft ghcr.io/$DOCKER_REGISTRY_ORG/jx-boot:$VERSION --scope all-layers -o spdx-json > sbom.json
        # This uploads the sbom
        cosign attach sbom --sbom sbom.json ghcr.io/${DOCKER_REGISTRY_ORG}/jx-boot@${{ steps.push-jx-boot.outputs.digest }}
        # This signs the sbom
        cosign sign --attachment sbom ghcr.io/${DOCKER_REGISTRY_ORG}/jx-boot@${{ steps.push-jx-boot.outputs.digest }}
        rm -f sbom.json
    - name: Build and push jx
      uses: docker/build-push-action@v3
      id: push-jx
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        build-args: |
          VERSION=${{ steps.prep.outputs.version }}
        tags: |
          ghcr.io/osamamagdy/jx:latest
          ghcr.io/osamamagdy/jx:${{ steps.prep.outputs.version }}
    - name: Sign the published Docker image for jx
      # ToDo(ankitm123): Remove this when this step works, for now we want this to unblock other releases
      continue-on-error: true
      env:
        COSIGN_EXPERIMENTAL: "true"
        GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
        # ToDo: We should change this to some other user, a test account pushing images and artifacts for jx org sounds wrong!
        GIT_USERNAME: osamamagdy
        DOCKER_REGISTRY_ORG: osamamagdy
        REPO_NAME: ${{ github.event.repository.name }}
      run: |
        cosign sign ghcr.io/$DOCKER_REGISTRY_ORG/$REPO_NAME@${{ steps.push-jx.outputs.digest }}
    - name: Generate and Push signed SBOM for jx
      # ToDo(ankitm123): Remove this when this step works, for now we want this to unblock other releases
      continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}
        GIT_USERNAME: osamamagdy
        DOCKER_REGISTRY_ORG: osamamagdy
        VERSION: ${{ steps.prep.outputs.version }}
        REPO_NAME: ${{ github.event.repository.name }}
        COSIGN_EXPERIMENTAL: "true"
      run: |
        syft ghcr.io/$DOCKER_REGISTRY_ORG/$REPO_NAME:$VERSION --scope all-layers -o spdx-json > sbom.json
        # This uploads the sbom
        cosign attach sbom --sbom sbom.json ghcr.io/${DOCKER_REGISTRY_ORG}/${REPO_NAME}@${{ steps.push-jx.outputs.digest }}
        # This signs the sbom
        cosign sign --attachment sbom ghcr.io/${DOCKER_REGISTRY_ORG}/${REPO_NAME}@${{ steps.push-jx.outputs.digest }}
"on":
  push:
    branches:
    - main
    - master
    - cosign-goreleaser-keyless
